{
  "swagger": "2.0",
  "info": {
    "title": "IKIRARO_REVOLUTIONIZING",
    "description": "This API Specification for Ikiraro",
    "contact": { "email": "mireilleirafasha@gmail.com" },
    "license": { "name": "MIT", "url": "http://www.opensource.org/licenses/mit" },
    "version": "1.0.0"
  },
  "basePath": "/Ikiraro",
  "schemes": ["https", "http"],
  "paths": {
    "/user/Test": {
      "get": {
        "tags": ["Users"],
        "summary": "Test",
        "description": "Test",
        "responses": {
          "200": { "description": "OK" }
        }
      }
    },
    "/user/signup": {
      "post": {
        "tags": ["Users"],
        "summary": "Create a new user",
        "description": "Create a new user",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/User" }
          }
        ],
        "responses": {
          "201": { "description": "User created" },
          "400": {
            "description": "Bad request - Validation error",
            "schema": { "$ref": "#/definitions/Error" }
          }
        }
      }
    },
    "/user/signin": {
      "post": {
        "tags": ["Users"],
        "summary": "Sign in a user",
        "description": "Sign in a user",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/User" }
          }
        ],
        "responses": {
          "200": { "description": "User logged in successfully" },
          "400": {
            "description": "Bad request - Validation error",
            "schema": { "$ref": "#/definitions/Error" }
          }
        }
      }
    },
    "/user/listAll": {
      "get": {
        "tags": ["Users"],
        "summary": "Get all users",
        "description": "Returns all the users",
        "responses": {
          "200": {
            "description": "All the users",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/User" }
            }
          }
        }
      }
    },
    "/user/verify": {
      "post": {
        "tags": ["Users"],
        "summary": "Verify a user",
        "description": "Verify a user",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/User" }
          }
        ],
        "responses": {
          "200": { "description": "OTP was verified" },
          "400": {
            "description": "Bad request - Validation error",
            "schema": { "$ref": "#/definitions/Error" }
          }
        }
      }
    },
    "/user/forgotpassword": {
      "post": {
        "tags": ["Users"],
        "summary": "Forgot password",
        "description": "Forgot password",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/User" }
          }
        ],
        "responses": {
          "200": { "description": "Forgot password was successful" },
          "400": {
            "description": "Bad request - Validation error",
            "schema": { "$ref": "#/definitions/Error" }
          }
        }
      }
    },
    "/user/resetpassword": {
      "post": {
        "tags": ["Users"],
        "summary": "Reset password",
        "description": "Reset password",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/User" }
          }
        ],
        "responses": {
          "200": { "description": "Password was reset successfully" },
          "400": {
            "description": "Bad request - Validation error",
            "schema": { "$ref": "#/definitions/Error" }
          }
        }
      }
    },
    "/contact/add": {
      "post": {
        "tags": ["Contact"],
        "summary": "Add new contact",
        "description": "Add new message and information of the contactUs",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/Contact" }
          }
        ],
        "responses": {
          "201": { "description": "New contact created successfully" },
          "400": {
            "description": "Bad request - Validation error",
            "schema": { "$ref": "#/definitions/Error" }
          }
        }
      }
    },
    "/contact/list":{
      "get":{
        "tags":[ "Contact"],
        "summary": "Get all messages",
        "description": "Returns all the messages",
        "responses":{
          "200": {
            "description": "All the messages",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Contact" }
            }
          }
        }
      }
    },
    "/contact/findbyUser:id":{
      "get":{
        "tags":[ "Contact"],
        "summary": "Get messages by user id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses":{
          "200": {
            "description": "Messages by user id",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Contact" }
            }
          }
        }
      }
    },
    "/contact/update:id":{
      "put":{
        "tags":[ "Contact"],
        "summary": "Update a message by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/Contact" }
          }
        ],
        "responses":{
          "200": {
            "description": "Message updated successfully"
          }
        }
      }
    },
    "/contact/delete/:id":{
      "delete":{
        "tags":[ "Contact"],
        "summary": "Delete a message by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses":{
          "200": {
            "description": "Message deleted successfully"
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "firstname": { "type": "string", "description": "FirstName of the User" },
        "lastname": { "type": "string", "description": "LastName of the User" },
        "continent": { "type": "string", "description": "continent of the User" },
        "country": { "type": "string", "description":"country of user"},
        "city":{ "type": "string", "description":"city of user"},
        "telephone":{ "type":"string","description":"telephone of user"},
        "idcard":{"type": "string","description":" ID number or passport of user"},
        "email": { "type": "string", "description": "Email of the User" },
        "password": { "type": "string", "description": "Password of the User" },
        "confirmPassword": { "type": "string", "description": "Confirm password of the User" },
        "role": {
          "type": "string",
          "enum": ["farmer", "promoter", "processor", "researcher", "policyMaker", "agroDealer"],
          "description": "Role of the User",
          "default": "farmer"
        }
      },
      "required": ["firstname", "lastname","continent","country","city","idcard","telephone","password", "email", "role", "confirmPassword"]
    },
    "Contact": {
      "type": "object",
      "properties": {
        "name": { "type": "string", "description": "Name of the contact" },
        "email": { "type": "string", "description": "Email of the contact" },
        "message": { "type": "string", "description": "Message sent" }
      },
      "required": ["name", "email", "message"]
    },
    "Error": {
      "type": "object",
      "properties": {
        "message": { "type": "string" }
      }
    }
  }
}
